
import React, { useRef } from 'react';
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { QrCode, Download, Share2 } from "lucide-react";

interface QrCodeGeneratorProps {
  restaurantName: string;
  restaurantUrl: string;
  logoUrl?: string;
}

export const QrCodeGenerator: React.FC<QrCodeGeneratorProps> = ({
  restaurantName,
  restaurantUrl,
  logoUrl,
}) => {
  const qrCodeRef = useRef<HTMLDivElement>(null);
  
  const handleDownload = () => {
    alert('In a real implementation, this would generate and download a QR code image');
    // This would use a library like qrcode.react to generate and download the QR code
  };
  
  const handleShare = () => {
    if (navigator.share) {
      navigator.share({
        title: `${restaurantName} Menu`,
        text: `Check out the menu at ${restaurantName}`,
        url: restaurantUrl,
      })
      .catch((error) => console.log('Error sharing', error));
    } else {
      // Fallback for browsers that don't support Web Share API
      navigator.clipboard.writeText(restaurantUrl);
      alert('Link copied to clipboard!');
    }
  };
  
  return (
    <div className="space-y-4">
      <div className="bg-white p-6 rounded-md shadow-sm">
        <div 
          ref={qrCodeRef}
          className="flex flex-col items-center justify-center"
        >
          {logoUrl && (
            <img 
              src={logoUrl} 
              alt={restaurantName} 
              className="w-16 h-16 object-contain mb-2"
            />
          )}
          <div className="text-center mb-4">
            <h3 className="font-bold">{restaurantName}</h3>
            <p className="text-sm text-muted-foreground">Scan to view our menu</p>
          </div>
          
          <div className="bg-white p-4 border rounded-md">
            {/* QR Code would be generated by a library like qrcode.react */}
            <div className="w-48 h-48 flex items-center justify-center bg-white">
              <QrCode size={120} />
            </div>
          </div>
          
          <div className="mt-2 text-sm text-center text-muted-foreground">
            {restaurantUrl}
          </div>
        </div>
      </div>
      
      <div className="flex flex-col gap-2 sm:flex-row">
        <Button 
          onClick={handleDownload}
          className="flex-1"
          variant="outline"
          size="sm"
        >
          <Download className="w-4 h-4 mr-2" />
          Download PNG
        </Button>
        <Button 
          onClick={handleShare}
          className="flex-1"
          variant="outline"
          size="sm"
        >
          <Share2 className="w-4 h-4 mr-2" />
          Share Link
        </Button>
      </div>
      
      <div className="mt-4">
        <h3 className="font-medium mb-2 text-sm">Menu URL</h3>
        <div className="flex">
          <Input 
            value={restaurantUrl}
            readOnly
            className="rounded-r-none"
          />
          <Button 
            onClick={() => {
              navigator.clipboard.writeText(restaurantUrl);
              alert('URL copied to clipboard!');
            }}
            variant="secondary"
            className="rounded-l-none"
          >
            Copy
          </Button>
        </div>
      </div>
    </div>
  );
};
